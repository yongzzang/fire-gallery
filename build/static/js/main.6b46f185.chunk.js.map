{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","className","map","motion","div","key","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","e","target","classList","contains","y","Title","useStorage","file","progress","setProgress","err","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","error","types","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b46f185.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/storage'; /*모든 이미지 저장소*/\nimport 'firebase/firestore';\n\n //Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDwl9JhSP5w51Qo4P0vNup9T2WWsegRBPs\",\n    authDomain: \"react-firebase-c7ade.firebaseapp.com\",\n    projectId: \"react-firebase-c7ade\",\n    storageBucket: \"react-firebase-c7ade.appspot.com\",\n    messagingSenderId: \"187720164055\",\n    appId: \"1:187720164055:web:f99e65fcdf2abe77b60692\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const projectStorage = firebase.storage();\n  const projectFirestore = firebase.firestore();\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\n  export { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(snap => {\n        let documents = [];\n        snap.forEach(doc => {\n          documents.push({...doc.data(), id: doc.id});\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n    // this is a cleanup function that react will run when\n    // a component using the hook unmounts\n  }, [collection]);\n\n  return { docs };\n}\n\nexport default useFirestore;","import React from 'react'\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n\n    const { docs } = useFirestore('images');\n    console.log(docs);\n\n    return(\n        <div className=\"img-grid\">\n        { docs && docs.map(doc =>(\n            <motion.div className=\"img-wrap\" key={doc.id}\n            layout\n            whileHover={{ opacity: 1}}\n                onClick={( () => setSelectedImg(doc.url))}\n            >\n                <motion.img src={doc.url} alt=\"uploaded pc\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ delay: 1 }}\n                />\n            </motion.div>\n        ))}\n        </div>\n    )\n}\n\nexport default ImageGrid;","import React from 'react'\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ selectedImg, setSelectedImg }) =>{\n\n    const handleClick = (e) =>{\n        if(e.target.classList.contains('backdrop')){\n    }\n\n}\n    return(\n        <motion.div className=\"backdrop\" onClick={handleClick}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      >\n        <motion.img src={selectedImg} alt=\"enlarged pic\" \n          initial={{ y: \"-100vh\" }}\n          animate={{ y: 0 }}\n        />\n      </motion.div>\n    )\n\n}\n\nexport default Modal","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Ani & Pet Gram</h1>\n      <h2>Welcome :)</h2>\n      <p>반갑습니다!</p>\n    </div>\n  )\n}\n\nexport default Title;","import { useState, useEffect } from 'react';\nimport{ projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n    const[progress, setProgress] = useState(0);\n    const[err, setError] = useState(null);\n    const[url, setUrl] = useState(null);\n\n    useEffect(() => {\n        //references\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection('images');\n\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) =>{\n            setError(err);\n        }, async () => {\n            const url = await storageRef.getDownloadURL();\n            const createdAt = timestamp();\n            collectionRef.add({ url, createdAt });\n            setUrl(url)\n        })\n    },[file]);\n\n    return { progress, url, err}\n}\n\nexport default useStorage;\n\n","import React,{useEffect} from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from \"framer-motion\";\n\n\nconst ProgressBar = ({file, setFile}) =>{\n    const { url, progress} = useStorage(file);\n    \n    useEffect(() => {\n        if(url){\n            setFile(null);\n        }\n    }, [url, setFile])\n    \n    return(\n        <motion.div className=\"progress-bar\"\n            initial={{ width: 0}}\n            animate={{ width: progress + '%'}}\n        ></motion.div>\n    )\n}\n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () =>{\n    const [file, setFile] = useState(null);\n    const[error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg'];\n\n    const changeHandler = (e) =>{\n        let selected = e.target.files[0];\n\n        if(selected && types.includes(selected.type)){\n            setFile(selected);\n            setError('');\n        } else {\n            setFile(null);\n            setError('Plz select an img file (png or jpeg)');\n        }\n    }\n    return (\n        <form>\n            <label>\n            <input type=\"file\" onChange={changeHandler}/>\n            <span>+</span>\n            </label>\n            <div className=\"ouput\">\n                { error && <div className=\"error\">{ error } </div>}\n                { file &&<div>{file.name}</div>}\n                { file && <ProgressBar file={file} setFile={setFile}/> }\n            </div>\n        </form>\n    )\n}\n\nexport default UploadForm;","import React, { useState } from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg}/ >\n     { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}